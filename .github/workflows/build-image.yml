name: Build New Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Identify new dockerfiles
        id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          filters: |
            dockerfiles:
              - 'dockerfiles/**/dockerfile'

      - name: Debug paths-filter outputs
        run: |
          echo "Dockerfiles changed: ${{ steps.filter.outputs.dockerfiles }}"
          echo "Matched Dockerfiles: ${{ steps.filter.outputs.dockerfiles_files }}"

      - name: Build and push new Docker images
        if: steps.filter.outputs.dockerfiles == 'true'
        run: |
          for dockerfile in ${{ steps.filter.outputs.dockerfiles_files }}; do
            dir=$(dirname "$dockerfile")

            # Remove the leading 'dockerfiles/' to get something like 'comfyui-v0.3.9/cudnn-devel'
            relpath="${dir#dockerfiles/}"

            # Grab everything up to the first slash (the version directory, e.g. 'comfyui-v0.3.9')
            version_directory=$(echo "$relpath" | cut -d'/' -f1)

            # Drop the 'comfyui-' prefix to get the actual version (e.g. 'v0.3.9')
            comfyui_version="${version_directory#comfyui-}"

            # Check if there's anything beyond the version directory (e.g. 'cudnn-devel')
            subdirs=$(echo "$relpath" | cut -d'/' -f2-)

            # Start your tag with just the version
            tag="$comfyui_version"

            # If there are subdirectories, turn them into dash-delimited suffixes
            if [ -n "$subdirs" ]; then
              # Replace any slashes with dashes, resulting in something like 'cudnn-devel'
              # or 'cudnn-devel-something-else' if there are multiple nested subfolders
              subdirs_tag=$(echo "$subdirs" | tr '/' '-')
              tag="${tag}-${subdirs_tag}"
            fi

            # Build the Docker image
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/comfyui-env:"${tag}" -f "$dockerfile" "$dir"

            # Push the Docker image
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/comfyui-env:"${tag}"
          done
